;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/12/2024 16:21:45
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02010F  	LJMP 271
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
_delay_short:
;BTH1_1.c,41 :: 		void delay_short() {
;BTH1_1.c,43 :: 		for (i = 0; i < 200; i++); // Ðieu chinh giá tri i
0x0026	0x750D00  	MOV delay_short_i_L0, #0
0x0029	0x750E00  	MOV delay_short_i_L0+1, #0
L_delay_short0:
0x002C	0xC3      	CLR C
0x002D	0xE50D    	MOV A, delay_short_i_L0
0x002F	0x94C8    	SUBB A, #200
0x0031	0xE50E    	MOV A, delay_short_i_L0+1
0x0033	0x9400    	SUBB A, #0
0x0035	0x500E    	JNC L_delay_short1
0x0037	0x7401    	MOV A, #1
0x0039	0x250D    	ADD A, delay_short_i_L0
0x003B	0xF50D    	MOV delay_short_i_L0, A
0x003D	0x7400    	MOV A, #0
0x003F	0x350E    	ADDC A, delay_short_i_L0+1
0x0041	0xF50E    	MOV delay_short_i_L0+1, A
0x0043	0x80E7    	SJMP L_delay_short0
L_delay_short1:
;BTH1_1.c,44 :: 		}
0x0045	0x22      	RET
; end of _delay_short
_display_letter:
;BTH1_1.c,47 :: 		void display_letter(unsigned char *letter) {       //Con tro den mang chua du lieu cua chu cái can hien thi.
;BTH1_1.c,49 :: 		for (row = 0; row < 8; row++) {
0x0046	0x750B00  	MOV display_letter_row_L0, #0
0x0049	0x750C00  	MOV display_letter_row_L0+1, #0
L_display_letter3:
0x004C	0xC3      	CLR C
0x004D	0xE50B    	MOV A, display_letter_row_L0
0x004F	0x9408    	SUBB A, #8
0x0051	0x7400    	MOV A, #0
0x0053	0x6480    	XRL A, #128
0x0055	0xF8      	MOV R0, A
0x0056	0xE50C    	MOV A, display_letter_row_L0+1
0x0058	0x6480    	XRL A, #128
0x005A	0x98      	SUBB A, R0
0x005B	0x502A    	JNC L_display_letter4
;BTH1_1.c,50 :: 		ROWS = ~(1 << row);
0x005D	0xA90B    	MOV R1, display_letter_row_L0
0x005F	0x7401    	MOV A, #1
0x0061	0x09      	INC R1
0x0062	0x8002    	SJMP L__display_letter17
L__display_letter18:
0x0064	0xC3      	CLR C
0x0065	0x33      	RLC A
L__display_letter17:
0x0066	0xD9FC    	DJNZ R1, L__display_letter18
0x0068	0xF8      	MOV R0, A
0x0069	0x64FF    	XRL A, #255
0x006B	0xF5A0    	MOV P2, A
;BTH1_1.c,51 :: 		COLUMNS = letter[row];   //gui du lieu cac hang hien tai den cac cot
0x006D	0xE50A    	MOV A, FARG_display_letter_letter
0x006F	0x250B    	ADD A, display_letter_row_L0
0x0071	0xF8      	MOV R0, A
0x0072	0x86B0    	MOV P3, @R0
;BTH1_1.c,52 :: 		delay_short();
0x0074	0x1126    	ACALL _delay_short
;BTH1_1.c,53 :: 		ROWS = 0xFF;      //dat cac hang o muc cao sau khi chuyen sang mang khac
0x0076	0x75A0FF  	MOV P2, #255
;BTH1_1.c,49 :: 		for (row = 0; row < 8; row++) {
0x0079	0x7401    	MOV A, #1
0x007B	0x250B    	ADD A, display_letter_row_L0
0x007D	0xF50B    	MOV display_letter_row_L0, A
0x007F	0x7400    	MOV A, #0
0x0081	0x350C    	ADDC A, display_letter_row_L0+1
0x0083	0xF50C    	MOV display_letter_row_L0+1, A
;BTH1_1.c,54 :: 		}
0x0085	0x80C5    	SJMP L_display_letter3
L_display_letter4:
;BTH1_1.c,55 :: 		}
0x0087	0x22      	RET
; end of _display_letter
_display_name:
;BTH1_1.c,58 :: 		void display_name() {        //khoi tao ham display_name va lay du lieu bang cach goi ham display_letter
;BTH1_1.c,60 :: 		for (i = 0; i < 50; i++) display_letter(letter_H);   //vong lap goi ham display_letter hien thi 50 lan
0x0088	0x750800  	MOV display_name_i_L0, #0
0x008B	0x750900  	MOV display_name_i_L0+1, #0
L_display_name6:
0x008E	0xC3      	CLR C
0x008F	0xE508    	MOV A, display_name_i_L0
0x0091	0x9432    	SUBB A, #50
0x0093	0x7400    	MOV A, #0
0x0095	0x6480    	XRL A, #128
0x0097	0xF8      	MOV R0, A
0x0098	0xE509    	MOV A, display_name_i_L0+1
0x009A	0x6480    	XRL A, #128
0x009C	0x98      	SUBB A, R0
0x009D	0x5013    	JNC L_display_name7
0x009F	0x750A40  	MOV FARG_display_letter_letter, lo_addr(_letter_H)
0x00A2	0x1146    	ACALL _display_letter
0x00A4	0x7401    	MOV A, #1
0x00A6	0x2508    	ADD A, display_name_i_L0
0x00A8	0xF508    	MOV display_name_i_L0, A
0x00AA	0x7400    	MOV A, #0
0x00AC	0x3509    	ADDC A, display_name_i_L0+1
0x00AE	0xF509    	MOV display_name_i_L0+1, A
0x00B0	0x80DC    	SJMP L_display_name6
L_display_name7:
;BTH1_1.c,61 :: 		for (i = 0; i < 50; i++) display_letter(letter_O);
0x00B2	0x750800  	MOV display_name_i_L0, #0
0x00B5	0x750900  	MOV display_name_i_L0+1, #0
L_display_name9:
0x00B8	0xC3      	CLR C
0x00B9	0xE508    	MOV A, display_name_i_L0
0x00BB	0x9432    	SUBB A, #50
0x00BD	0x7400    	MOV A, #0
0x00BF	0x6480    	XRL A, #128
0x00C1	0xF8      	MOV R0, A
0x00C2	0xE509    	MOV A, display_name_i_L0+1
0x00C4	0x6480    	XRL A, #128
0x00C6	0x98      	SUBB A, R0
0x00C7	0x5013    	JNC L_display_name10
0x00C9	0x750A38  	MOV FARG_display_letter_letter, lo_addr(_letter_O)
0x00CC	0x1146    	ACALL _display_letter
0x00CE	0x7401    	MOV A, #1
0x00D0	0x2508    	ADD A, display_name_i_L0
0x00D2	0xF508    	MOV display_name_i_L0, A
0x00D4	0x7400    	MOV A, #0
0x00D6	0x3509    	ADDC A, display_name_i_L0+1
0x00D8	0xF509    	MOV display_name_i_L0+1, A
0x00DA	0x80DC    	SJMP L_display_name9
L_display_name10:
;BTH1_1.c,62 :: 		for (i = 0; i < 50; i++) display_letter(letter_I);
0x00DC	0x750800  	MOV display_name_i_L0, #0
0x00DF	0x750900  	MOV display_name_i_L0+1, #0
L_display_name12:
0x00E2	0xC3      	CLR C
0x00E3	0xE508    	MOV A, display_name_i_L0
0x00E5	0x9432    	SUBB A, #50
0x00E7	0x7400    	MOV A, #0
0x00E9	0x6480    	XRL A, #128
0x00EB	0xF8      	MOV R0, A
0x00EC	0xE509    	MOV A, display_name_i_L0+1
0x00EE	0x6480    	XRL A, #128
0x00F0	0x98      	SUBB A, R0
0x00F1	0x5013    	JNC L_display_name13
0x00F3	0x750A30  	MOV FARG_display_letter_letter, lo_addr(_letter_I)
0x00F6	0x1146    	ACALL _display_letter
0x00F8	0x7401    	MOV A, #1
0x00FA	0x2508    	ADD A, display_name_i_L0
0x00FC	0xF508    	MOV display_name_i_L0, A
0x00FE	0x7400    	MOV A, #0
0x0100	0x3509    	ADDC A, display_name_i_L0+1
0x0102	0xF509    	MOV display_name_i_L0+1, A
0x0104	0x80DC    	SJMP L_display_name12
L_display_name13:
;BTH1_1.c,63 :: 		}
0x0106	0x22      	RET
; end of _display_name
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x0107	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x0108	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x0109	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x010A	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x010B	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x010C	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x010E	0x22      	RET
; end of ___CC2D
_main:
0x010F	0x758148  	MOV SP, #72
0x0112	0x120133  	LCALL 307
;BTH1_1.c,65 :: 		void main() {
;BTH1_1.c,66 :: 		while (1) {
L_main15:
;BTH1_1.c,67 :: 		display_name();
0x0115	0x1188    	ACALL _display_name
;BTH1_1.c,68 :: 		}
0x0117	0x80FC    	SJMP L_main15
;BTH1_1.c,69 :: 		}
0x0119	0x80FE    	SJMP #254
; end of _main
0x0133	0x7830    	MOV R0, 48
0x0135	0x7918    	MOV R1, 24
0x0137	0x75821B  	MOV DP0L, 27
0x013A	0x758301  	MOV DP0H, 1
0x013D	0x120107  	LCALL 263
0x0140	0x22      	RET
;BTH1_1.c,0 :: ?ICS_letter_I
0x011B	0xFF1818 ;?ICS_letter_I+0
0x011E	0x181818 ;?ICS_letter_I+3
0x0121	0x18FF ;?ICS_letter_I+6
; end of ?ICS_letter_I
;BTH1_1.c,0 :: ?ICS_letter_O
0x0123	0x3C66C3 ;?ICS_letter_O+0
0x0126	0xC3C3C3 ;?ICS_letter_O+3
0x0129	0x663C ;?ICS_letter_O+6
; end of ?ICS_letter_O
;BTH1_1.c,0 :: ?ICS_letter_H
0x012B	0xC3C3C3 ;?ICS_letter_H+0
0x012E	0xFFFFC3 ;?ICS_letter_H+3
0x0131	0xC3C3 ;?ICS_letter_H+6
; end of ?ICS_letter_H
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0026      [32]    _delay_short
0x0046      [66]    _display_letter
0x0088     [127]    _display_name
0x0107       [8]    ___CC2D
0x010F      [12]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [2]    display_name_i_L0
0x000A       [1]    FARG_display_letter_letter
0x000B       [2]    display_letter_row_L0
0x000D       [2]    delay_short_i_L0
0x0030       [8]    _letter_I
0x0038       [8]    _letter_O
0x0040       [8]    _letter_H
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x00A0       [1]    P2
0x00B0       [1]    P3
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x011B       [8]    ?ICS_letter_I
0x0123       [8]    ?ICS_letter_O
0x012B       [8]    ?ICS_letter_H
//** Label List: ** 
//----------------------------------------------
  L_delay_short0
  L_delay_short1
  L_delay_short2
  L_display_letter3
  L_display_letter4
  L_display_letter5
  L_display_name6
  L_display_name7
  L_display_name8
  L_display_name9
  L_display_name10
  L_display_name11
  L_display_name12
  L_display_name13
  L_display_name14
  L_main15
  L_main16
  _delay_short
  _display_letter
  L__display_letter17
  L__display_letter18
  _display_name
  _main
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
